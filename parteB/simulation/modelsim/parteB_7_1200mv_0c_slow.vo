// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/27/2024 22:05:26"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module parteB (
	clk,
	A,
	B,
	Bin,
	Diff,
	Bout);
input 	clk;
input 	A;
input 	B;
input 	Bin;
output 	Diff;
output 	Bout;

// Design Ports Information
// Diff	=>  Location: PIN_AD15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Bout	=>  Location: PIN_AE20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Bin	=>  Location: PIN_AF25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_G20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_AB15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J12,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("parteB_7_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \A~input_o ;
wire \Diff~output_o ;
wire \Bout~output_o ;
wire \clk~input_o ;
wire \B~input_o ;
wire \Bin~input_o ;
wire \diff_internal~combout ;
wire \FFD_diff|q~q ;
wire \bout_internal~combout ;
wire \FFD_bout|q~q ;


// Location: IOIBUF_X74_Y73_N15
cycloneiii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOOBUF_X60_Y0_N16
cycloneiii_io_obuf \Diff~output (
	.i(\FFD_diff|q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Diff~output_o ),
	.obar());
// synopsys translate_off
defparam \Diff~output .bus_hold = "false";
defparam \Diff~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X85_Y0_N23
cycloneiii_io_obuf \Bout~output (
	.i(\FFD_bout|q~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Bout~output_o ),
	.obar());
// synopsys translate_off
defparam \Bout~output .bus_hold = "false";
defparam \Bout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X40_Y73_N8
cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X67_Y0_N15
cycloneiii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X83_Y0_N1
cycloneiii_io_ibuf \Bin~input (
	.i(Bin),
	.ibar(gnd),
	.o(\Bin~input_o ));
// synopsys translate_off
defparam \Bin~input .bus_hold = "false";
defparam \Bin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X67_Y9_N16
cycloneiii_lcell_comb diff_internal(
// Equation(s):
// \diff_internal~combout  = \A~input_o  $ (\B~input_o  $ (\Bin~input_o ))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\B~input_o ),
	.datad(\Bin~input_o ),
	.cin(gnd),
	.combout(\diff_internal~combout ),
	.cout());
// synopsys translate_off
defparam diff_internal.lut_mask = 16'hA55A;
defparam diff_internal.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X67_Y9_N17
dffeas \FFD_diff|q (
	.clk(\clk~input_o ),
	.d(\diff_internal~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FFD_diff|q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \FFD_diff|q .is_wysiwyg = "true";
defparam \FFD_diff|q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X67_Y9_N26
cycloneiii_lcell_comb bout_internal(
// Equation(s):
// \bout_internal~combout  = (\A~input_o  & (\B~input_o  & \Bin~input_o )) # (!\A~input_o  & ((\B~input_o ) # (\Bin~input_o )))

	.dataa(\A~input_o ),
	.datab(gnd),
	.datac(\B~input_o ),
	.datad(\Bin~input_o ),
	.cin(gnd),
	.combout(\bout_internal~combout ),
	.cout());
// synopsys translate_off
defparam bout_internal.lut_mask = 16'hF550;
defparam bout_internal.sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X67_Y9_N27
dffeas \FFD_bout|q (
	.clk(\clk~input_o ),
	.d(\bout_internal~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\FFD_bout|q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \FFD_bout|q .is_wysiwyg = "true";
defparam \FFD_bout|q .power_up = "low";
// synopsys translate_on

assign Diff = \Diff~output_o ;

assign Bout = \Bout~output_o ;

endmodule
